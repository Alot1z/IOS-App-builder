name: Android Emulator Build

on:
  push:
    branches: [ main ]
    paths:
      - 'Apps/AndroidEmulator/**'
      - '.github/workflows/android-emulator.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Apps/AndroidEmulator/**'
      - '.github/workflows/android-emulator.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  DEVELOPER_DIR: /Applications/Xcode_15.4.app/Contents/Developer
  SDKROOT: /Applications/Xcode_15.4.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS17.5.sdk

jobs:
  build-emulator:
    name: Build Android Emulator
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true
    
    - name: Setup Xcode
      uses: apple-actions/setup-xcode@v3
      with:
        xcode-version: '15.4'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools-version: 33.0.0
    
    - name: Cache Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/Library/Caches/CocoaPods
        key: ${{ runner.os }}-deps-${{ hashFiles('**/*.gradle*', '**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-deps-
    
    - name: Install Dependencies
      run: |
        brew install imagemagick
        brew install swiftlint
        brew install create-dmg
        brew install qemu
        brew install mesa
        brew install portaudio
        brew install libpcap
    
    - name: Setup Build Environment
      run: |
        cd Apps/AndroidEmulator
        mkdir -p build/{release,logs,debug-symbols}
        mkdir -p build/DerivedData/{Build/Intermediates.noindex,Build/Products}
    
    - name: Run SwiftLint
      run: |
        cd Apps/AndroidEmulator
        swiftlint lint --reporter github-actions-logging
    
    - name: Build Core Components
      id: build-core
      continue-on-error: true
      run: |
        cd Apps/AndroidEmulator/src/core
        make -f Makefile.cpu
        make -f Makefile.gpu
        make -f Makefile.audio
        make -f Makefile.network
    
    - name: Build Swift Components
      id: build-swift
      if: steps.build-core.outcome == 'success'
      run: |
        cd Apps/AndroidEmulator
        swiftc -sdk $SDKROOT \
          -target arm64-apple-ios16.0 \
          -O \
          -framework Metal \
          -framework MetalKit \
          -framework AVFoundation \
          -framework CoreAudio \
          -framework Network \
          src/*.swift \
          -o build/release/AndroidEmulator
    
    - name: Run Tests
      if: steps.build-swift.outcome == 'success'
      run: |
        cd Apps/AndroidEmulator
        ./tests/test_cpu.sh
        ./tests/test_gpu.sh
        ./tests/test_audio.sh
        ./tests/test_network.sh
        ./tests/test_integration.sh
    
    - name: Package App
      if: success()
      run: |
        cd Apps/AndroidEmulator
        mkdir -p build/AndroidEmulator.app
        cp -r build/release/AndroidEmulator build/AndroidEmulator.app/
        cp -r resources/* build/AndroidEmulator.app/
        mkdir -p build/AndroidEmulator.app/Components
        cp build/core/cpu/libemulator-cpu.dylib build/AndroidEmulator.app/Components/
        cp build/core/gpu/libemulator-gpu.dylib build/AndroidEmulator.app/Components/
        cp build/core/audio/libemulator-audio.dylib build/AndroidEmulator.app/Components/
        cp build/core/network/libemulator-network.dylib build/AndroidEmulator.app/Components/
        cd build
        mkdir -p Payload
        cp -r AndroidEmulator.app Payload/
        zip -r AndroidEmulator.ipa Payload
    
    - name: Upload Build Artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: AndroidEmulator
        path: |
          Apps/AndroidEmulator/build/AndroidEmulator.ipa
          Apps/AndroidEmulator/build/debug-symbols/
          Apps/AndroidEmulator/build/logs/
          Apps/AndroidEmulator/build/test-results/
        retention-days: 5
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          Apps/AndroidEmulator/build/AndroidEmulator.ipa
        name: Android Emulator Release ${{ github.ref_name }}
        body_path: Apps/AndroidEmulator/CHANGELOG.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Cleanup
      if: always()
      run: |
        cd Apps/AndroidEmulator
        rm -rf build/DerivedData
        rm -rf build/Intermediates.noindex
