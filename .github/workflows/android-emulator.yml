name: Android Emulator Build

on:
  push:
    branches: [ "master" ]
    paths:
      - 'Apps/AndroidEmulator/**'
      - '.github/workflows/android-emulator.yml'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'Apps/AndroidEmulator/**'
      - '.github/workflows/android-emulator.yml'
  workflow_dispatch:

env:
  CCACHE_DIR: ~/.ccache

jobs:
  build:
    name: Build Android Emulator IPA
    runs-on: macos-latest
    defaults:
      run:
        working-directory: Apps/AndroidEmulator

    steps:
    - uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.2'

    - name: Install Dependencies
      run: |
        brew install xcbeautify
        
    - name: Setup Provisioning Profile
      env:
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
        
    - name: Setup Code Signing
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # Import certificate from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode > $CERTIFICATE_PATH

        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH || true
        security default-keychain -s $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -t 3600 -l $KEYCHAIN_PATH

        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH || true
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # Clean up
        rm -f $CERTIFICATE_PATH

    - name: Build App
      run: |
        xcodebuild -project AndroidEmulator.xcodeproj \
          -scheme AndroidEmulator \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath build/AndroidEmulator.xcarchive \
          clean archive | xcbeautify
          
    - name: Create IPA
      run: |
        xcodebuild -exportArchive \
          -archivePath build/AndroidEmulator.xcarchive \
          -exportOptionsPlist ExportOptions.plist \
          -exportPath build/Export | xcbeautify
          
    - name: Upload Android Emulator IPA
      uses: actions/upload-artifact@v4
      with:
        name: AndroidEmulator
        path: Apps/AndroidEmulator/build/Export/AndroidEmulator.ipa
